/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SigninImport } from './routes/signin'
import { Route as AiImport } from './routes/ai'
import { Route as FeedsRouteImport } from './routes/feeds/route'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as FeedsIndexImport } from './routes/feeds/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as FeedsProviderIdIndexImport } from './routes/feeds/$providerId/index'

// Create/Update Routes

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AiRoute = AiImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => rootRoute,
} as any)

const FeedsRouteRoute = FeedsRouteImport.update({
  id: '/feeds',
  path: '/feeds',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FeedsIndexRoute = FeedsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FeedsRouteRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const FeedsProviderIdIndexRoute = FeedsProviderIdIndexImport.update({
  id: '/$providerId/',
  path: '/$providerId/',
  getParentRoute: () => FeedsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/feeds': {
      id: '/feeds'
      path: '/feeds'
      fullPath: '/feeds'
      preLoaderRoute: typeof FeedsRouteImport
      parentRoute: typeof rootRoute
    }
    '/ai': {
      id: '/ai'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof AiImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/feeds/': {
      id: '/feeds/'
      path: '/'
      fullPath: '/feeds/'
      preLoaderRoute: typeof FeedsIndexImport
      parentRoute: typeof FeedsRouteImport
    }
    '/feeds/$providerId/': {
      id: '/feeds/$providerId/'
      path: '/$providerId'
      fullPath: '/feeds/$providerId'
      preLoaderRoute: typeof FeedsProviderIdIndexImport
      parentRoute: typeof FeedsRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface FeedsRouteRouteChildren {
  FeedsIndexRoute: typeof FeedsIndexRoute
  FeedsProviderIdIndexRoute: typeof FeedsProviderIdIndexRoute
}

const FeedsRouteRouteChildren: FeedsRouteRouteChildren = {
  FeedsIndexRoute: FeedsIndexRoute,
  FeedsProviderIdIndexRoute: FeedsProviderIdIndexRoute,
}

const FeedsRouteRouteWithChildren = FeedsRouteRoute._addFileChildren(
  FeedsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/feeds': typeof FeedsRouteRouteWithChildren
  '/ai': typeof AiRoute
  '/signin': typeof SigninRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/feeds/': typeof FeedsIndexRoute
  '/feeds/$providerId': typeof FeedsProviderIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai': typeof AiRoute
  '/signin': typeof SigninRoute
  '/dashboard': typeof DashboardIndexRoute
  '/feeds': typeof FeedsIndexRoute
  '/feeds/$providerId': typeof FeedsProviderIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/feeds': typeof FeedsRouteRouteWithChildren
  '/ai': typeof AiRoute
  '/signin': typeof SigninRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/feeds/': typeof FeedsIndexRoute
  '/feeds/$providerId/': typeof FeedsProviderIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/feeds'
    | '/ai'
    | '/signin'
    | '/dashboard/'
    | '/feeds/'
    | '/feeds/$providerId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/ai' | '/signin' | '/dashboard' | '/feeds' | '/feeds/$providerId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/feeds'
    | '/ai'
    | '/signin'
    | '/dashboard/'
    | '/feeds/'
    | '/feeds/$providerId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  FeedsRouteRoute: typeof FeedsRouteRouteWithChildren
  AiRoute: typeof AiRoute
  SigninRoute: typeof SigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  FeedsRouteRoute: FeedsRouteRouteWithChildren,
  AiRoute: AiRoute,
  SigninRoute: SigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/feeds",
        "/ai",
        "/signin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/"
      ]
    },
    "/feeds": {
      "filePath": "feeds/route.tsx",
      "children": [
        "/feeds/",
        "/feeds/$providerId/"
      ]
    },
    "/ai": {
      "filePath": "ai.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/feeds/": {
      "filePath": "feeds/index.tsx",
      "parent": "/feeds"
    },
    "/feeds/$providerId/": {
      "filePath": "feeds/$providerId/index.tsx",
      "parent": "/feeds"
    }
  }
}
ROUTE_MANIFEST_END */
